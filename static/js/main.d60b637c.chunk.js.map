{"version":3,"sources":["components/Statistics/Statistics.module.css","components/MainContainer/MainContainer.module.css","components/SectionTitle/SectionTitle.module.css","components/Feedback/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/MainContainer/MainContainer.jsx","components/SectionTitle/SectionTitle.jsx","components/Feedback/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","MainContainer","children","className","s","container","SectionTitle","title","FeedbackOptions","options","handleIncrement","map","option","button","type","onClick","propType","PropTypes","arrayOf","string","onLeaveFeedback","func","isRequired","Statistics","props","good","neutral","bad","total","positivePercentage","statistics","data","Notification","message","text","App","useState","feedbacks","setFeedbacks","countTotalFeedback","Object","values","reduce","acc","feedback","Math","round","countPositiveFeedbackPercentage","totalFeedback","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,qBCAzBD,EAAOC,QAAU,CAAC,UAAY,mC,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,6B,+ICEV,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,oBCDxB,SAASI,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SAC5C,OACE,oCACE,oBAAIC,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,K,qCCHQ,SAASM,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACET,UAAWC,IAAES,OACbC,KAAK,SAELC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,MAQXJ,EAAgBQ,SAAW,CACzBP,QAASQ,IAAUC,QAAQD,IAAUE,QACrCC,gBAAiBH,IAAUI,KAAKC,Y,oBCfnB,SAASC,EAAWC,GACjC,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,qBAAI1B,UAAWC,IAAE0B,WAAjB,UACE,qBAAI3B,UAAWC,IAAE2B,KAAjB,mBAA8BN,KAC9B,qBAAItB,UAAWC,IAAE2B,KAAjB,sBAAiCL,KACjC,qBAAIvB,UAAWC,IAAE2B,KAAjB,kBAA6BJ,KAC7B,qBAAIxB,UAAWC,IAAE2B,KAAjB,oBAA+BH,EAA/B,OACA,qBAAIzB,UAAWC,IAAE2B,KAAjB,gCAA2CF,EAA3C,W,qBCVS,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,sBAAM9B,UAAWC,IAAE8B,KAAnB,SAA0BD,ICGpB,SAASE,IACtB,MAAkCC,mBAAS,CAAEX,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAAvE,mBAAOU,EAAP,KAAkBC,EAAlB,KASMC,EAAqB,WACzB,OAAOC,OAAOC,OAAOJ,GAAWK,QAC9B,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,IACzB,IASEhB,EAAQW,IACRV,EANkC,SAAAD,GAEtC,OADAA,EAAQW,IACDM,KAAKC,MAAwB,IAAjBT,EAAUZ,KAAcG,GAIlBmB,CAAgCnB,GACrDoB,EAAgBpB,EAAQ,EAE9B,OACE,eAAC3B,EAAD,WACE,cAACK,EAAD,CAAcC,MAAM,wBAApB,SACE,cAACC,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5BgB,SAAAE,GACtB0B,GAAa,SAAAW,GAAS,kCACjBA,GADiB,kBAEnBrC,EAASqC,EAAUrC,GAAU,YA6B9B,eAACN,EAAD,CAAcC,MAAM,aAApB,UACGyC,GACC,cAACzB,EAAD,CACEE,KAAMY,EAAUZ,KAChBC,QAASW,EAAUX,QACnBC,IAAKU,EAAUV,IACfqB,cAAeA,EACfpB,MAAOA,EACPC,mBAAoBA,KAItBmB,GAAiB,cAAChB,EAAD,CAAcC,QAAQ,4B,MCjDjDiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.d60b637c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"Statistics_data__k1J38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContainer_container__2wIkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SectionTitle_title__3qYb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__tClGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1r7aG\"};","import PropTypes from 'prop-types';\nimport s from './MainContainer.module.css';\n\nexport default function MainContainer({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nMainContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './SectionTitle.module.css';\n\nexport default function SectionTitle({ title, children }) {\n  return (\n    <section>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, handleIncrement }) {\n  return options.map(option => (\n    <button\n      className={s.button}\n      type=\"button\"\n      key={option}\n      onClick={() => handleIncrement(option)}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.propType = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <ul className={s.statistics}>\n      <li className={s.data}>Good: {good}</li>\n      <li className={s.data}>Neutral: {neutral}</li>\n      <li className={s.data}>Bad: {bad}</li>\n      <li className={s.data}>Total: {total} </li>\n      <li className={s.data}>Positive feedback: {positivePercentage} %</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <span className={s.text}>{message}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport MainContainer from './components/MainContainer/MainContainer';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [feedbacks, setFeedbacks] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const handleIncrement = option => {\n    setFeedbacks(prevState => ({\n      ...prevState,\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(feedbacks).reduce(\n      (acc, feedback) => acc + feedback,\n      0,\n    );\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    total = countTotalFeedback();\n    return Math.round((feedbacks.good * 100) / total);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage(total);\n  const totalFeedback = total > 0;\n\n  return (\n    <MainContainer>\n      <SectionTitle title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          handleIncrement={handleIncrement}\n        />\n      </SectionTitle>\n\n      <SectionTitle title=\"Statistics\">\n        {totalFeedback && (\n          <Statistics\n            good={feedbacks.good}\n            neutral={feedbacks.neutral}\n            bad={feedbacks.bad}\n            totalFeedback={totalFeedback}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n\n        {!totalFeedback && <Notification message=\"No feedback given\" />}\n      </SectionTitle>\n    </MainContainer>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}